name: Sysdig IaC Security Scan
on:
  push:
    branches: [main, develop]
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.tf'
      - '**/*.json'
      - 'docker-compose*.yml'
      - 'k8s/**'
      - 'k8s-specifications/**'
      - 'kubernetes/**'
      - 'infrastructure/**'
      - 'terraform/**'
  pull_request:
    branches: [main, develop]  
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.tf'
      - '**/*.json'
      - 'docker-compose*.yml'
      - 'k8s/**'
      - 'kubernetes/**'
      - 'infrastructure/**'
      - 'terraform/**'

env:
  SYSDIG_SECURE_ENDPOINT: "https://eu1.app.sysdig.com"

jobs:
  iac-scan:
    name: Infrastructure as Code Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Run Sysdig IaC Scanner
        uses: sysdiglabs/scan-action@v5
        with:
          # Enable IaC scanning mode
          iac-scan-path: .
          
          # Sysdig configuration
          sysdig-secure-token: ${{ secrets.SECURE_API_TOKEN }}
          sysdig-secure-url: ${{ env.SYSDIG_SECURE_ENDPOINT }}
          
          # IaC specific settings
          stop-on-failed-policy-eval: false
          stop-on-processing-error: true
          
          # Output format and filtering
          severity-at-least: "medium"
          
          # Optional: specify which IaC frameworks to scan
          # iac-scan-frameworks: "terraform,kubernetes,cloudformation"
          
      - name: Upload SARIF results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ github.workspace }}/sarif.json
          category: sysdig-iac-scan
          
      - name: Upload IaC scan results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sysdig-iac-scan-results-${{ github.run_number }}
          path: |
            ${{ github.workspace }}/sarif.json
            ${{ github.workspace }}/sysdig-scan-result.json
          retention-days: 30
          
      - name: Comment PR with IaC scan summary
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const sarif = JSON.parse(fs.readFileSync('sarif.json', 'utf8'));
              const runs = sarif.runs || [];
              let totalIssues = 0;
              let criticalIssues = 0;
              let highIssues = 0;
              
              runs.forEach(run => {
                const results = run.results || [];
                totalIssues += results.length;
                results.forEach(result => {
                  const level = result.level || 'info';
                  if (level === 'error') criticalIssues++;
                  else if (level === 'warning') highIssues++;
                });
              });
              
              const comment = `## üîç Sysdig IaC Security Scan Results
              
              - **Total Issues Found**: ${totalIssues}
              - **Critical**: ${criticalIssues}
              - **High**: ${highIssues}
              - **Medium/Low**: ${totalIssues - criticalIssues - highIssues}
              
              ${totalIssues > 0 ? '‚ö†Ô∏è Please review the security findings in the Security tab.' : '‚úÖ No security issues found in infrastructure code!'}
              
              <details>
              <summary>View scan details</summary>
              
              Scanned files for infrastructure security issues including:
              - Terraform configurations
              - Kubernetes manifests  
              - Docker Compose files
              - CloudFormation templates
              - Other IaC files
              
              </details>`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not parse SARIF results:', error.message);
            }
